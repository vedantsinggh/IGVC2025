<?xml version="1.0"?>

<robot name="ashwini" xmlns:xacro="ashwini_description_xacro_namespace">
  <!-- Dummy root link without inertia -->
  <link name="dummy_root">
  </link>

  <joint name="dummy_root_to_base" type="fixed">
    <parent link="dummy_root"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <xacro:include filename="$(find ashwini)/urdf/ashwini.gazebo" />

  <xacro:property name="pi" value="3.1415926535897931" />


  <xacro:property name="camera_mass" value="0.1"/>
	<xacro:property name="hokoyu_mass" value="1e-5"/>


  <xacro:property name="base_link_length_width_height" value="0.650 0.381 0.132" />
  <xacro:property name="base_link_length" value="0.650" />
  <xacro:property name="base_link_width" value="0.381" />
  <xacro:property name="base_link_height" value="0.132" />
  <xacro:property name="base_link_mass" value="20"/> <!--25 kg-->
  
  <xacro:property name="drive_wheel_length" value="0.049" />
  <xacro:property name="drive_wheel_radius" value="0.181" />
  <xacro:property name="drive_wheel_mass" value="2"/> <!--2 kg-->

  <xacro:property name="castor_mount_link_length_width_height" value="0.1145 0.10 0.0057" />
  <xacro:property name="castor_mount_link_length" value="0.1145" />
  <xacro:property name="castor_mount_link_width" value="0.10" />
  <xacro:property name="castor_mount_link_height" value="0.0057" />
  <xacro:property name="castor_mount_link_mass" value="0.25"/> <!--0.25 kg-->

  <xacro:property name="castor_mount_dummy_link_length" value="0.02" />
  <xacro:property name="castor_mount_dummy_link_width" value="0.02" />
  <xacro:property name="castor_mount_dummy_link_height" value="0.02" />
  <xacro:property name="castor_mount_dummy_link_mass" value="1.5"/> <!--0.25 kg-->

  <xacro:property name="castor_wheel_length" value="0.049" />
  <xacro:property name="castor_wheel_radius" value="0.07925" />
  <xacro:property name="castor_wheel_mass" value="2"/> <!--2 kg-->

  <xacro:property name="friction_val" value="0.15"/>

  <xacro:macro name="box_link" params="link_name length width height mass *origin">
    <link name="${link_name}_link">
      <!--If you do not explicitly specify a <collision> element. Gazebo will 
      treat your link as "invisible" to laser scanners and collision checking-->
      <collision>
        <geometry>
          <box size="${length} ${width} ${height}"/>
        </geometry>
        <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
        <xacro:insert_block name="origin" />
      </collision>
      
      <visual>
        <geometry>
          <!--box dimensions is Meters. L X W X H where the L X H is a ractange, 
              and the H extrudes it upwards -->
          <box size="${length} ${width} ${height}"/>
        </geometry>
        <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
        <xacro:insert_block name="origin" />
      </visual>
      
      
      <inertial>
        <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
        <xacro:insert_block name="origin" />
        <!--all blocks now need a 'mass' argument-->
        <mass value="${mass}"/>
        <!--This is the 3x3 inertial matrix. See: https://wiki.ros.org/urdf/XML/link -->
        <!--where x=length; y=width; z=height. these lines of code came from 
        Emiliano Borghi's project-->
        <inertia
          ixx="${mass*(width*width+height*height)/12}" 
          ixy = "0" 
          ixz = "0"
          iyy="${mass*(length*length+height*height)/12}" 
          iyz = "0"
          izz="${mass*(length*length+height*height)/12}"/>
        </inertial>      
      
    </link>
  </xacro:macro>

  <xacro:macro name="cylinder_link" params="link_name length radius mass *origin">
    <link name="${link_name}_link">
      <!--If you do not explicitly specify a <collision> element. Gazebo will 
      treat your link as "invisible" to laser scanners and collision checking-->
      <collision>
        <geometry>
          <cylinder length="${length}" radius="${radius}"/>
        </geometry>
        <xacro:insert_block name="origin" />
      </collision>

      <visual>
        <geometry>
          <cylinder length="${length}" radius="${radius}"/>
        </geometry>
          <!-- roll pitch and yaw will move the item in 3D space to arrange it how
               we want it in relation to the origin. the XYZ is to move it around
             the 3D space relative to the origin. Note that 1.57075 is pi/2 -->
        <xacro:insert_block name="origin" />
        
      </visual>
      
      <!--TODO-->
      <inertial>
        <!-- line below allows us to insert:<origin rpy="${rpy}" xyz="${xyz}"/>-->
        <xacro:insert_block name="origin" />
        <!--all blocks now need a 'mass' argument-->
        <mass value="${mass}"/>
        
        <!--This is the 3x3 inertial matrix. See: https://wiki.ros.org/urdf/XML/link -->
        <inertia
          ixx="${mass*(3*radius*radius+length*length)/12}" 
    	  ixy = "0" 
    	  ixz = "0"
    	  iyy="${mass*(3*radius*radius+length*length)/12}" 
    	  iyz = "0"
    	  izz="${mass*radius*radius/2}"
        />
      </inertial>

    </link>
  </xacro:macro>

  <xacro:macro name="continuous_joint" params="name rpy xyz parent child friction *origin">
    <joint name="${name}_joint" type="continuous">
      <axis rpy="${rpy}" xyz="${xyz}"/>
      <parent link="${parent}_link"/>
      <child link="${child}_link"/>
      <!-- this is the point at which the two parts attach to one another    -->
      <xacro:insert_block name="origin" />
      <!--This introduces friction so that continious joints don't spin indefinitly
      damping is only used in Gazebo4 and earlier.... -->
      <dynamics damping="0.0" friction="${friction}"/> 
    </joint>
  </xacro:macro>

  <xacro:macro name="fixed_joint" params="name parent child *origin">
    <joint name="${name}_joint" type="fixed">
      <parent link="${parent}_link"/>
      <child link="${child}_link"/>
      <!-- this is the point at which the two parts attach to one another    -->
      <xacro:insert_block name="origin" />
    </joint>
  </xacro:macro>

  <xacro:box_link link_name="base" length="${base_link_length}"
                                   width="${base_link_width}"
                                   height="${base_link_height}"  mass="${base_link_mass}">
    <!--origin rpy="0 0 0" xyz="-0.325 -0.1905 0.066"/-->
    <origin rpy="0 0 0" xyz="-0.325 -0.1905 0.066"/>
  </xacro:box_link>

  <xacro:cylinder_link link_name="left_drive_wheel" length="${drive_wheel_length}" radius="${drive_wheel_radius}"  mass="${drive_wheel_mass}"> 
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
  </xacro:cylinder_link>

  <!--        -->
  <xacro:continuous_joint name="base_to_left_drive_wheel" rpy="0 0 0" xyz="0 1 0" parent="base" child="left_drive_wheel" 
                          friction="${friction_val}">
    <origin xyz="-0.05 0.037 -0.035"/>
  </xacro:continuous_joint>

  <!--right_drive_wheel_link is a well named link :-) -->
  <xacro:cylinder_link link_name="right_drive_wheel" length="${drive_wheel_length}" radius="${drive_wheel_radius}"  mass="${drive_wheel_mass}"> 
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
  </xacro:cylinder_link>

  <!--        -->
  <xacro:continuous_joint name="base_to_right_drive_wheel" rpy="0 0 0" xyz="0 1 0" parent="base" child="right_drive_wheel"
                          friction="${friction_val}">
    <origin xyz="-0.05 -0.421 -0.035"/>
  </xacro:continuous_joint>

  <!--+++++++++++++++++++++++++++++++++++LEFT CASTOR+++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--left_caster_mount -->
  <xacro:box_link link_name="left_castor_mount" length="${castor_mount_link_length}" 
                                                width="${castor_mount_link_width}" 
                                                height="${castor_mount_link_height}" 
                                                mass="${castor_mount_link_mass}">  
    <origin xyz="0 0 0" rpy="0 0 0" /> 
  </xacro:box_link>

   <!--joint-->
  <xacro:fixed_joint name="base_to_left_castor_mount" parent="base" child="left_castor_mount">
    <origin xyz="-0.52835 -0.041 -0.03265"/>
  </xacro:fixed_joint>


  <!--left_caster_dummy to give the castor wheel rotation about the Z axis -->
  <xacro:box_link link_name="left_castor_dummy" length="${castor_mount_dummy_link_length}" 
                                                width="${castor_mount_dummy_link_width}" 
                                                height="${castor_mount_dummy_link_height}" 
                                                mass="${castor_mount_dummy_link_mass}">  
    <origin xyz="0 0 0" rpy="0 0 0" /> 
  </xacro:box_link>

  <!--joint between left castor mount and dummy link to allow rotation of castor wheel about z axis-->
  <xacro:continuous_joint name="left_castor_mount_to_left_castor_dummy" rpy="0 0 0" xyz="0 0 1" 
                          parent="left_castor_mount" child="left_castor_dummy" friction="${friction_val}">
    <origin xyz="0.0 0.0 -0.01"/>
  </xacro:continuous_joint>

  <!--left_castor_wheel_link is a well named link :-) -->
  <xacro:cylinder_link link_name="left_castor_wheel" length="${castor_wheel_length}" radius="${castor_wheel_radius}"  mass="${castor_wheel_mass}"> 
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
  </xacro:cylinder_link>

  <!--        -->
  <xacro:continuous_joint name="left_castor_dummy_to_left_castor_wheel" rpy="0 0 0" xyz="0 1 0" 
                          parent="left_castor_dummy" child="left_castor_wheel" friction="${friction_val}">
    <origin xyz="-0.037 0.0 -0.10785"/>
  </xacro:continuous_joint>

  <!--+++++++++++++++++++++++++++++++++++RIGHT CASTOR+++++++++++++++++++++++++++++++++++++++++++++++++++-->


  <!--right_caster_plate_link is a well named link :-) -->
  <xacro:box_link link_name="right_castor_mount" length="${castor_mount_link_length}" 
                                                 width="${castor_mount_link_width}"
                                                 height="${castor_mount_link_height}" 
                                                 mass="${castor_mount_link_mass}">  
    <origin xyz="0 0 0" rpy="0 0 0" /> 
  </xacro:box_link>

   <!--        -->
  <xacro:fixed_joint name="base_to_right_castor_mount" parent="base" child="right_castor_mount">
    <origin xyz="-0.52835 -0.344 -0.03265"/>
  </xacro:fixed_joint>

  <!--right_caster_dummy to give the castor wheel rotation about the Z axis -->
  <xacro:box_link link_name="right_castor_dummy" length="${castor_mount_dummy_link_length}" 
                                                 width="${castor_mount_dummy_link_width}" 
                                                 height="${castor_mount_dummy_link_height}" 
                                                 mass="${castor_mount_dummy_link_mass}">  
    <origin xyz="0 0 0" rpy="0 0 0" /> 
  </xacro:box_link>

  <!--joint between right castor mount and dummy link to allow rotation of castor wheel about z axis-->
  <xacro:continuous_joint name="right_castor_mount_to_right_castor_dummy" rpy="0 0 0" xyz="0 0 1" 
                          parent="right_castor_mount" child="right_castor_dummy" friction="${friction_val}">
    <origin xyz="0.0 0.0  -0.01"/>
  </xacro:continuous_joint>


  <!--right_castor_wheel_link is a well named link :-) -->
  <xacro:cylinder_link link_name="right_castor_wheel" length="${castor_wheel_length}" radius="${castor_wheel_radius}"
                        mass="${castor_wheel_mass}"> 
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
  </xacro:cylinder_link>

  <!--        -->
  <xacro:continuous_joint name="right_castor_dummy_to_right_castor_wheel" rpy="0 0 0" xyz="0 1 0" 
                          parent="right_castor_dummy" child="right_castor_wheel" friction="${friction_val}">
    <origin xyz="-0.037 0 -0.10785"/>
  </xacro:continuous_joint>

  <link name="camera">
		<inertial>
			<mass value="${camera_mass}"/>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia
		        ixx="1e-6" ixy="0.0" ixz="0.0"
		        iyy="1e-6" iyz="0.0"
		        izz="1e-6"
		      />
		</inertial>

		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.05 0.05 0.05"/>
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.05 0.05 0.05"/>
			</geometry>
		</collision>
	</link>

  <link name="hokuyo">
		<inertial>
			<mass value="${hokoyu_mass}"/>
			<origin xyz="0 0 0" rpy="0 0 0"/>

			<inertia
		        ixx="1e-6" ixy="0.0" ixz="0.0"
		        iyy="1e-6" iyz="0.0"
		        izz="1e-6"
		      />
		</inertial>

		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<mesh filename="package://ashwini/meshes/hokuyo.dae"/>
			</geometry>
		</visual>

		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 0.1"/>
			</geometry>
		</collision>
	</link>

  <joint name="camera_joint" type="fixed">
		<origin xyz="0.006 -0.2 0.4" rpy="0 0.2 0" />
		<parent link="base_link"/>
		<child link="camera" />
		<axis xyz="0 1 0"/>
	</joint>

	<!-- Hokoyu Joint -->
	<joint name="hokuyo_joint" type="fixed">
	    <origin xyz="0.001 -0.2 0.2" rpy="0 0 0" />
	    <parent link="base_link"/>
	    <child link="hokuyo" />  
	    <axis xyz="0 1 0"/> 
	</joint>



    <!-- IMU Sensor -->
  <link name="imu_link">
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.0001" iyz="0.0"
               izz="0.0001"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.05 0.05 0.02"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.05 0.05 0.02"/>
      </geometry>
    </collision>
  </link>

  <!-- IMU Joint (Attach to Base Link) -->
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="-0.2 -0.2 0.144" rpy="0 0 0"/>
  </joint>


</robot>